apply plugin: 'com.android.application'
/*apply plugin: 'com.google.gms.google-services'*/

def keyStorePropertiesFile = rootProject.file('keystore.properties')
def keyStoreProperties = new Properties()
keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "com.kuyikeji.filemanager"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 11
        versionName "2.2.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

   /* signingConfigs {
        release {
            keyAlias 'work'
            keyPassword '123456'
            storeFile file('C:\\Users\\010\\Desktop\\work.jks')
            storePassword '123456'
        }

        debug{
            keyAlias 'work'
            keyPassword '123456'
            storeFile file('C:\\Users\\010\\Desktop\\work.jks')
            storePassword '123456'
        }
    }*/

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            jniDebuggable false
            multiDexEnabled true
            zipAlignEnabled true
            shrinkResources true
            /**配置签名密匙*/
           /* signingConfig signingConfigs.release*/
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            multiDexEnabled true
            zipAlignEnabled false
            shrinkResources false
            /**不用配置签名密匙*/
           /* signingConfig signingConfigs.debug*/
            testProguardFile 'tests-proguard.cfg'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    implementation 'com.android.support:animated-vector-drawable:27.1.1'
    implementation 'com.android.support:support-v13:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:palette-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'

    //For tests
    androidTestImplementation 'junit:junit:4.12'

    //tests the app logic
    testImplementation 'org.robolectric:robolectric:3.7'

    //tests android interaction
    testImplementation 'org.robolectric:shadows-multidex:3.7'

    //tests android interaction
    testImplementation 'org.robolectric:shadows-httpclient:3.7'

    //tests android interaction
    testImplementation 'commons-logging:commons-logging:1.2'

    //required by junrar. Damn.
    testImplementation 'org.apache.sshd:sshd-core:1.7.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    debugImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'commons-net:commons-net:3.6'

    //Detect memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.3'
    implementation 'org.apache.commons:commons-compress:1.12'
    implementation('com.github.junrar:junrar:0.7') {
        exclude module: 'commons-logging'
        exclude module: 'commons-logging-api'
        exclude module: 'maven-scm-api'
        exclude module: 'maven-scm-provider-svnexe'
    }
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //FTP Server

    /*
            implementation 'org.apache.mina:mina-core:2.0.13'
            implementation 'org.apache.ftpserver:ftpserver-core:1.0.6'
            implementation 'org.apache.ftpserver:ftplet-api:1.0.6'
            */

    // https://mvnrepository.com/artifact/org.apache.mina/mina-core
    implementation 'org.apache.mina:mina-core:2.0.16'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.25'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation 'org.slf4j:slf4j-android:1.7.25'

    //implementation files('libs/ftplet-api-1.1.0-SNAPSHOT.jar')

    // https://mvnrepository.com/artifact/org.apache.ftpserver/ftplet-api
    implementation 'org.apache.ftpserver:ftplet-api:1.1.0'


    //implementation files('libs/ftpserver-core-1.1.0-SNAPSHOT.jar')

    // https://mvnrepository.com/artifact/org.apache.ftpserver/ftpserver-core
    implementation 'org.apache.ftpserver:ftpserver-core:1.1.0'

    //implementation 'com.jcraft:jsch:0.1.53'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'eu.chainfire:libsuperuser:1.0.0.+'
    implementation 'com.cloudrail:cloudrail-si-android:2.22.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    //Nice charts and graphs
    implementation 'com.github.npgall:concurrent-trees:2.6.1'

    //Concurrent tries

    //SFTP
    implementation 'com.hierynomus:sshj:0.23.0'
    implementation 'com.madgag.spongycastle:bcpkix-jdk15on:1.58.0.0'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'

    //Glide: loads icons seemlessly
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation('com.github.bumptech.glide:recyclerview-integration:4.6.1') {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    implementation 'com.github.jahirfiquitiva:FABsMenu:1.1.3'

    //Floating Action Buttons Menu (aka expandable FAB)

    //Simple library show
    implementation('com.mikepenz:aboutlibraries:6.0.3@aar') {
        transitive = true
    }
    implementation 'com.android.support:multidex:1.0.2'
    //Multiple dex files
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    //implementation 'com.facebook.android:facebook-android-sdk:4.36.0'
    implementation 'com.facebook.android:audience-network-sdk:4.99.3'
    implementation 'com.umeng.sdk:common:1.5.3'
    implementation 'com.umeng.sdk:analytics:7.5.3'
    implementation 'com.jaredrummler:android-processes:1.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.xdandroid:hellodaemon:+'
    implementation project(path: ':kooLib')
    /*implementation project(path: ':audienceNetwork')
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.0'*/
}


configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module("commons-logging:commons-logging-api:1.1") with module("commons-logging:commons-logging:1.1.1")
            substitute module("com.android.support:support-annotations:27.1.1") with module("com.android.support:support-annotations:27.0.2")
        }
    }
}

configurations.all {
    //循环一个个的依赖库
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        //获取当前循环到的依赖库
        def requested = details.requested
        //如果这个依赖库群组的名字是com.android.support
        if (requested.group == 'com.android.support') {
            //且其名字不是以multidex开头的
            if (!requested.name.startsWith("multidex")) {
                //这里指定需要统一的依赖版本
                details.useVersion '27.1.1'
            }
        }
    }
}

Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
